/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package eu.partyn.app.api;

import org.springframework.format.annotation.DateTimeFormat;
import eu.partyn.app.dto.EventDto;
import java.time.LocalDateTime;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.4.0")
@Validated
public interface EventsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /events : Submits new events.
     * Submits new event
     *
     * @param name  (optional)
     * @param dateTime  (optional)
     * @param ticketPrice  (optional)
     * @param description  (optional)
     * @param location  (optional)
     * @param topPick  (optional)
     * @param image  (optional)
     * @return Successfully submitted events return an instance with given id. (status code 201)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/events",
        produces = { "application/json" },
        consumes = { "multipart/form-data" }
    )
    
    default ResponseEntity<EventDto> addEvent(
         @Valid @RequestParam(value = "name", required = false) String name,
         @Valid @RequestParam(value = "dateTime", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime dateTime,
         @Valid @RequestParam(value = "ticketPrice", required = false) Integer ticketPrice,
         @Valid @RequestParam(value = "description", required = false) String description,
         @Valid @RequestParam(value = "location", required = false) String location,
         @Valid @RequestParam(value = "topPick", required = false) Boolean topPick,
         @RequestPart(value = "image", required = false) MultipartFile image
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"ticketPrice\" : 6, \"imageUrl\" : \"imageUrl\", \"name\" : \"name\", \"description\" : \"description\", \"location\" : \"location\", \"id\" : 0, \"topPick\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /events : Queries all events.
     * Selects all events stored in a database and returns them as an array.
     *
     * @return Successful query returns an array of events. (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/events",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<EventDto>> getEvents(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"dateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"ticketPrice\" : 6, \"imageUrl\" : \"imageUrl\", \"name\" : \"name\", \"description\" : \"description\", \"location\" : \"location\", \"id\" : 0, \"topPick\" : true }, { \"dateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"ticketPrice\" : 6, \"imageUrl\" : \"imageUrl\", \"name\" : \"name\", \"description\" : \"description\", \"location\" : \"location\", \"id\" : 0, \"topPick\" : true } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
